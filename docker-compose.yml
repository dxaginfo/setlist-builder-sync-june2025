version: '3.8'

services:
  # Backend service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: setlist-builder-api
    restart: always
    env_file:
      - ./server/.env
    ports:
      - "${API_PORT:-5000}:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - setlist-network

  # Frontend service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: setlist-builder-client
    restart: always
    env_file:
      - ./client/.env
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - setlist-network

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: setlist-builder-postgres
    restart: always
    env_file:
      - ./server/.env
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-setlist_builder}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - setlist-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: setlist-builder-redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - setlist-network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.10.4
    container_name: setlist-builder-elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "${ES_PORT:-9200}:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - setlist-network

  # Nginx service (for production)
  nginx:
    image: nginx:alpine
    container_name: setlist-builder-nginx
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./client/build:/usr/share/nginx/html
    depends_on:
      - server
      - client
    networks:
      - setlist-network
    profiles:
      - production

networks:
  setlist-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  elasticsearch-data: